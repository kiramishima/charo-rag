services:
  elasticsearch:
    image: elasticsearch:8.15.3
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - urc

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  
  ollama:
    build:
      context: .
      dockerfile: images/ollama.Dockerfile
    environment:
      DATA_PATH: "data/bq-results-20240829-041517-1724904953827.jsonl"
    ports:
      - "11434:11434"
    networks:
      - urc

  app:
    build:
      context: .
      dockerfile: images/app.Dockerfile
    environment:
      DATA_PATH: "data/bq-results-20240829-041517-1724904953827.jsonl"
    ports:
      - "5000:5000"
    depends_on:
      - elasticsearch
      - ollama
    networks:
      - urc

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_AUTH_DISABLE_LOGIN_FORM=false
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
      - GF_USERS_AUTO_ASSIGN_ORG=true
      - GF_USERS_AUTO_ASSIGN_ORG_ROLE=Viewer
      - GF_SECURITY_SECRET_KEY=${GRAFANA_SECRET_KEY:-your_secret_key_here}
    depends_on:
      - postgres
    networks:
      - urc

volumes:
  postgres_data:
  grafana_data:

networks:
  urc:
    driver: bridge